variables:
  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  ARCHIVE_SUBMISSION_WS_CONFIG_MAP: archive-submission-ws-configmap
  DOCKER_PULL_SECRET: archive-submission-ws-gitlab-docker-secret
  IMAGE: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA
  NAMESPACE: archive-submission-ws-prod
  LOGBACK_CONFIG_MAP: logback-config-map
  FILEBEAT_CONFIG_MAP: filebeat-config

#build:
#  image: maven:3.3.9-jdk-8-alpine
#  stage: build
#  script:
#    - mvn $MAVEN_CLI_OPTS compile

docker_build:
  image: docker:18.09
  stage: build
  services:
    - docker:18.09-dind
  script:
    - apk add --update bash gettext tzdata coreutils ca-certificates wget
    - update-ca-certificates
    - wget -O ${APM_AGENT_JAR} ${APM_AGENT_URL}
    - ls
    - envsubst '${JAR_FILE_NAME} ${APM_AGENT_JAR} ${NFS_UID} ${NFS_GID} ${NFS_GID2}' < .Dockerfile > Dockerfile
    - cat Dockerfile
    - docker info
    - docker build -t $IMAGE .
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $IMAGE
  when: manual

kube_deploy_prod_hh:
  environment: prod-hh
  extends: .kube_deploy_script

kube_deploy_prod_hx:
  environment: prod-hx
  extends: .kube_deploy_script

.kube_deploy_script:
  stage: deploy
  image: dtzar/helm-kubectl
  script:
    - apk add --update bash gettext tzdata coreutils
    - export HOSTNAME_BCKUP=$HOSTNAME && export HOSTNAME='${HOSTNAME}'
    - envsubst < config/.application.yml > config/application.yml
    - envsubst < config/.logback-spring.xml > config/logback-spring.xml
    - envsubst < .filebeat.yml > filebeat.yml
    - export HOSTNAME=$HOSTNAME_BCKUP
    - mkdir -p ~/.kube
    - echo $KUBE_CONFIG > kubeconfig
    - base64 -d kubeconfig > ~/.kube/config
    - kubectl config get-contexts
    - kubectl create namespace $NAMESPACE || true
    - kubectl -n $NAMESPACE delete secret $DOCKER_PULL_SECRET || true
    - kubectl -n $NAMESPACE create secret docker-registry $DOCKER_PULL_SECRET --docker-server=$CI_REGISTRY --docker-username=$CI_DEPLOY_USER --docker-password=$CI_DEPLOY_PASSWORD
    # create configmap for first time
    - kubectl -n $NAMESPACE create configmap $ARCHIVE_SUBMISSION_WS_CONFIG_MAP --from-file=config/application.yml || true
    # replace configmap if it already exists
    - kubectl -n $NAMESPACE create configmap $ARCHIVE_SUBMISSION_WS_CONFIG_MAP --from-file=config/application.yml -o yaml --dry-run=client | kubectl replace -f -
    # create configmap for first time
    - kubectl -n $NAMESPACE create configmap $LOGBACK_CONFIG_MAP --from-file=config/logback-spring.xml || true
    # replace configmap if it already exists
    - kubectl -n $NAMESPACE create configmap $LOGBACK_CONFIG_MAP --from-file=config/logback-spring.xml -o yaml --dry-run=client | kubectl replace -f -
    # create configmap for first time
    - kubectl -n $k8s_namespace create configmap $FILEBEAT_CONFIG_MAP --from-file=filebeat.yml || true
    # replace configmap if it already exists
    - kubectl -n $k8s_namespace create configmap $FILEBEAT_CONFIG_MAP --from-file=filebeat.yml -o yaml --dry-run | kubectl replace -f -
    - envsubst < .kubernetes.yml > kubernetes.yml
    - cat kubernetes.yml
    - kubectl -n $NAMESPACE apply -f kubernetes.yml
  when: manual